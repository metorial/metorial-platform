// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v6.31.1
// source: rpc.proto

package rpc

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type SendToListenersRequest struct {
	state              protoimpl.MessageState `protogen:"open.v1"`
	Payload            string                 `protobuf:"bytes,1,opt,name=payload,proto3" json:"payload,omitempty"`
	Id                 string                 `protobuf:"bytes,2,opt,name=id,proto3" json:"id,omitempty"`
	ListenerIdentifier string                 `protobuf:"bytes,3,opt,name=listener_identifier,json=listenerIdentifier,proto3" json:"listener_identifier,omitempty"`
	unknownFields      protoimpl.UnknownFields
	sizeCache          protoimpl.SizeCache
}

func (x *SendToListenersRequest) Reset() {
	*x = SendToListenersRequest{}
	mi := &file_rpc_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SendToListenersRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SendToListenersRequest) ProtoMessage() {}

func (x *SendToListenersRequest) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SendToListenersRequest.ProtoReflect.Descriptor instead.
func (*SendToListenersRequest) Descriptor() ([]byte, []int) {
	return file_rpc_proto_rawDescGZIP(), []int{0}
}

func (x *SendToListenersRequest) GetPayload() string {
	if x != nil {
		return x.Payload
	}
	return ""
}

func (x *SendToListenersRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *SendToListenersRequest) GetListenerIdentifier() string {
	if x != nil {
		return x.ListenerIdentifier
	}
	return ""
}

type SendToListenersResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Response      string                 `protobuf:"bytes,2,opt,name=response,proto3" json:"response,omitempty"`
	Timestamp     int64                  `protobuf:"varint,3,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	Error         string                 `protobuf:"bytes,4,opt,name=error,proto3" json:"error,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SendToListenersResponse) Reset() {
	*x = SendToListenersResponse{}
	mi := &file_rpc_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SendToListenersResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SendToListenersResponse) ProtoMessage() {}

func (x *SendToListenersResponse) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SendToListenersResponse.ProtoReflect.Descriptor instead.
func (*SendToListenersResponse) Descriptor() ([]byte, []int) {
	return file_rpc_proto_rawDescGZIP(), []int{1}
}

func (x *SendToListenersResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *SendToListenersResponse) GetResponse() string {
	if x != nil {
		return x.Response
	}
	return ""
}

func (x *SendToListenersResponse) GetTimestamp() int64 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

func (x *SendToListenersResponse) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

type GetListenerTokenRequest struct {
	state              protoimpl.MessageState `protogen:"open.v1"`
	ListenerIdentifier string                 `protobuf:"bytes,1,opt,name=listener_identifier,json=listenerIdentifier,proto3" json:"listener_identifier,omitempty"`
	ExpiresInSeconds   int64                  `protobuf:"varint,2,opt,name=expires_in_seconds,json=expiresInSeconds,proto3" json:"expires_in_seconds,omitempty"`
	unknownFields      protoimpl.UnknownFields
	sizeCache          protoimpl.SizeCache
}

func (x *GetListenerTokenRequest) Reset() {
	*x = GetListenerTokenRequest{}
	mi := &file_rpc_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetListenerTokenRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetListenerTokenRequest) ProtoMessage() {}

func (x *GetListenerTokenRequest) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetListenerTokenRequest.ProtoReflect.Descriptor instead.
func (*GetListenerTokenRequest) Descriptor() ([]byte, []int) {
	return file_rpc_proto_rawDescGZIP(), []int{2}
}

func (x *GetListenerTokenRequest) GetListenerIdentifier() string {
	if x != nil {
		return x.ListenerIdentifier
	}
	return ""
}

func (x *GetListenerTokenRequest) GetExpiresInSeconds() int64 {
	if x != nil {
		return x.ExpiresInSeconds
	}
	return 0
}

type GetListenerTokenResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Token         string                 `protobuf:"bytes,1,opt,name=token,proto3" json:"token,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetListenerTokenResponse) Reset() {
	*x = GetListenerTokenResponse{}
	mi := &file_rpc_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetListenerTokenResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetListenerTokenResponse) ProtoMessage() {}

func (x *GetListenerTokenResponse) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetListenerTokenResponse.ProtoReflect.Descriptor instead.
func (*GetListenerTokenResponse) Descriptor() ([]byte, []int) {
	return file_rpc_proto_rawDescGZIP(), []int{3}
}

func (x *GetListenerTokenResponse) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

var File_rpc_proto protoreflect.FileDescriptor

const file_rpc_proto_rawDesc = "" +
	"\n" +
	"\trpc.proto\x12\arpc.rpc\"s\n" +
	"\x16SendToListenersRequest\x12\x18\n" +
	"\apayload\x18\x01 \x01(\tR\apayload\x12\x0e\n" +
	"\x02id\x18\x02 \x01(\tR\x02id\x12/\n" +
	"\x13listener_identifier\x18\x03 \x01(\tR\x12listenerIdentifier\"\x83\x01\n" +
	"\x17SendToListenersResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\x12\x1a\n" +
	"\bresponse\x18\x02 \x01(\tR\bresponse\x12\x1c\n" +
	"\ttimestamp\x18\x03 \x01(\x03R\ttimestamp\x12\x14\n" +
	"\x05error\x18\x04 \x01(\tR\x05error\"x\n" +
	"\x17GetListenerTokenRequest\x12/\n" +
	"\x13listener_identifier\x18\x01 \x01(\tR\x12listenerIdentifier\x12,\n" +
	"\x12expires_in_seconds\x18\x02 \x01(\x03R\x10expiresInSeconds\"0\n" +
	"\x18GetListenerTokenResponse\x12\x14\n" +
	"\x05token\x18\x01 \x01(\tR\x05token2\xc2\x01\n" +
	"\x11ListenerConnector\x12T\n" +
	"\x0fSendToListeners\x12\x1f.rpc.rpc.SendToListenersRequest\x1a .rpc.rpc.SendToListenersResponse\x12W\n" +
	"\x10GetListenerToken\x12 .rpc.rpc.GetListenerTokenRequest\x1a!.rpc.rpc.GetListenerTokenResponseB7Z5github.com/metorial/metorial/services/rpc/gen/rpc;rpcb\x06proto3"

var (
	file_rpc_proto_rawDescOnce sync.Once
	file_rpc_proto_rawDescData []byte
)

func file_rpc_proto_rawDescGZIP() []byte {
	file_rpc_proto_rawDescOnce.Do(func() {
		file_rpc_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_rpc_proto_rawDesc), len(file_rpc_proto_rawDesc)))
	})
	return file_rpc_proto_rawDescData
}

var file_rpc_proto_msgTypes = make([]protoimpl.MessageInfo, 4)
var file_rpc_proto_goTypes = []any{
	(*SendToListenersRequest)(nil),   // 0: rpc.rpc.SendToListenersRequest
	(*SendToListenersResponse)(nil),  // 1: rpc.rpc.SendToListenersResponse
	(*GetListenerTokenRequest)(nil),  // 2: rpc.rpc.GetListenerTokenRequest
	(*GetListenerTokenResponse)(nil), // 3: rpc.rpc.GetListenerTokenResponse
}
var file_rpc_proto_depIdxs = []int32{
	0, // 0: rpc.rpc.ListenerConnector.SendToListeners:input_type -> rpc.rpc.SendToListenersRequest
	2, // 1: rpc.rpc.ListenerConnector.GetListenerToken:input_type -> rpc.rpc.GetListenerTokenRequest
	1, // 2: rpc.rpc.ListenerConnector.SendToListeners:output_type -> rpc.rpc.SendToListenersResponse
	3, // 3: rpc.rpc.ListenerConnector.GetListenerToken:output_type -> rpc.rpc.GetListenerTokenResponse
	2, // [2:4] is the sub-list for method output_type
	0, // [0:2] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_rpc_proto_init() }
func file_rpc_proto_init() {
	if File_rpc_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_rpc_proto_rawDesc), len(file_rpc_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   4,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_rpc_proto_goTypes,
		DependencyIndexes: file_rpc_proto_depIdxs,
		MessageInfos:      file_rpc_proto_msgTypes,
	}.Build()
	File_rpc_proto = out.File
	file_rpc_proto_goTypes = nil
	file_rpc_proto_depIdxs = nil
}
