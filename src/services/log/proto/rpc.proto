syntax = "proto3";

package rpc.rpc;

option go_package = "github.com/metorial/metorial/services/rpc/gen/rpc;rpc";

service LogService {
  rpc IngestLog(IngestLogRequest) returns (IngestLogResponse);
  rpc ListLogs(ListLogsRequest) returns (ListLogsResponse);
  rpc GetLog(GetLogRequest) returns (GetLogResponse);
}

enum ListPaginationOrder {
  list_cursor_order_asc = 0;
  list_cursor_order_desc = 1;
}

message ListPagination {
  string after_id = 1;
  string before_id = 2;
  int32 limit = 3;
  ListPaginationOrder order = 4;
}

message LogEntry {
  string entity_id = 1;
  string entity_type = 2;
  string instance_id = 3;
  string payload_json = 5;
  string fields_json = 7;
  uint64 timestamp = 6;
}

message LogEntryLight {
  string entity_id = 1;
  string entity_type = 2;
  string instance_id = 3;
  string fields_json = 4;
  uint64 timestamp = 5;
}

message IngestLogRequest {
  string entity_id = 1;
  string entity_type = 2;
  string instance_id = 3;
  string payload_json = 4;
  uint64 timestamp = 5;
}

message IngestLogResponse {}

message ListLogsRequest {
  string entity_type = 2;
  repeated string entity_ids = 1;
  repeated string instance_ids = 3;
  ListPagination pagination = 4;
  optional string filter_json = 5;
  optional uint64 min_timestamp = 6;
  optional uint64 max_timestamp = 7;
}

message ListLogsResponse {
  repeated LogEntryLight logs = 1;
}

message GetLogRequest {
  string entity_id = 1;
  string entity_type = 2;
  optional string instance_id = 3;
}

message GetLogResponse {
  LogEntry log = 1;
}