// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v6.31.1
// source: rpc.proto

package rpc

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type OwnerType int32

const (
	OwnerType_owner_type_unspecified  OwnerType = 0
	OwnerType_owner_type_instance     OwnerType = 1
	OwnerType_owner_type_organization OwnerType = 2
)

// Enum value maps for OwnerType.
var (
	OwnerType_name = map[int32]string{
		0: "owner_type_unspecified",
		1: "owner_type_instance",
		2: "owner_type_organization",
	}
	OwnerType_value = map[string]int32{
		"owner_type_unspecified":  0,
		"owner_type_instance":     1,
		"owner_type_organization": 2,
	}
)

func (x OwnerType) Enum() *OwnerType {
	p := new(OwnerType)
	*p = x
	return p
}

func (x OwnerType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (OwnerType) Descriptor() protoreflect.EnumDescriptor {
	return file_rpc_proto_enumTypes[0].Descriptor()
}

func (OwnerType) Type() protoreflect.EnumType {
	return &file_rpc_proto_enumTypes[0]
}

func (x OwnerType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use OwnerType.Descriptor instead.
func (OwnerType) EnumDescriptor() ([]byte, []int) {
	return file_rpc_proto_rawDescGZIP(), []int{0}
}

type IntervalUnit int32

const (
	IntervalUnit_interval_unit_unspecified IntervalUnit = 0
	IntervalUnit_interval_unit_minute      IntervalUnit = 1
	IntervalUnit_interval_unit_hour        IntervalUnit = 2
	IntervalUnit_interval_unit_day         IntervalUnit = 3
)

// Enum value maps for IntervalUnit.
var (
	IntervalUnit_name = map[int32]string{
		0: "interval_unit_unspecified",
		1: "interval_unit_minute",
		2: "interval_unit_hour",
		3: "interval_unit_day",
	}
	IntervalUnit_value = map[string]int32{
		"interval_unit_unspecified": 0,
		"interval_unit_minute":      1,
		"interval_unit_hour":        2,
		"interval_unit_day":         3,
	}
)

func (x IntervalUnit) Enum() *IntervalUnit {
	p := new(IntervalUnit)
	*p = x
	return p
}

func (x IntervalUnit) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (IntervalUnit) Descriptor() protoreflect.EnumDescriptor {
	return file_rpc_proto_enumTypes[1].Descriptor()
}

func (IntervalUnit) Type() protoreflect.EnumType {
	return &file_rpc_proto_enumTypes[1]
}

func (x IntervalUnit) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use IntervalUnit.Descriptor instead.
func (IntervalUnit) EnumDescriptor() ([]byte, []int) {
	return file_rpc_proto_rawDescGZIP(), []int{1}
}

type Owner struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Type          OwnerType              `protobuf:"varint,2,opt,name=type,proto3,enum=rpc.rpc.OwnerType" json:"type,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Owner) Reset() {
	*x = Owner{}
	mi := &file_rpc_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Owner) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Owner) ProtoMessage() {}

func (x *Owner) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Owner.ProtoReflect.Descriptor instead.
func (*Owner) Descriptor() ([]byte, []int) {
	return file_rpc_proto_rawDescGZIP(), []int{0}
}

func (x *Owner) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Owner) GetType() OwnerType {
	if x != nil {
		return x.Type
	}
	return OwnerType_owner_type_unspecified
}

type Entity struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Type          string                 `protobuf:"bytes,2,opt,name=type,proto3" json:"type,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Entity) Reset() {
	*x = Entity{}
	mi := &file_rpc_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Entity) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Entity) ProtoMessage() {}

func (x *Entity) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Entity.ProtoReflect.Descriptor instead.
func (*Entity) Descriptor() ([]byte, []int) {
	return file_rpc_proto_rawDescGZIP(), []int{1}
}

func (x *Entity) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Entity) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

type Interval struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Unit          IntervalUnit           `protobuf:"varint,1,opt,name=unit,proto3,enum=rpc.rpc.IntervalUnit" json:"unit,omitempty"`
	Count         int32                  `protobuf:"varint,2,opt,name=count,proto3" json:"count,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Interval) Reset() {
	*x = Interval{}
	mi := &file_rpc_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Interval) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Interval) ProtoMessage() {}

func (x *Interval) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Interval.ProtoReflect.Descriptor instead.
func (*Interval) Descriptor() ([]byte, []int) {
	return file_rpc_proto_rawDescGZIP(), []int{2}
}

func (x *Interval) GetUnit() IntervalUnit {
	if x != nil {
		return x.Unit
	}
	return IntervalUnit_interval_unit_unspecified
}

func (x *Interval) GetCount() int32 {
	if x != nil {
		return x.Count
	}
	return 0
}

type IngestUsageRecordRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Owner         *Owner                 `protobuf:"bytes,1,opt,name=owner,proto3" json:"owner,omitempty"`
	Entity        *Entity                `protobuf:"bytes,2,opt,name=entity,proto3" json:"entity,omitempty"`
	Type          string                 `protobuf:"bytes,3,opt,name=type,proto3" json:"type,omitempty"`
	Count         int64                  `protobuf:"varint,4,opt,name=count,proto3" json:"count,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *IngestUsageRecordRequest) Reset() {
	*x = IngestUsageRecordRequest{}
	mi := &file_rpc_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *IngestUsageRecordRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IngestUsageRecordRequest) ProtoMessage() {}

func (x *IngestUsageRecordRequest) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IngestUsageRecordRequest.ProtoReflect.Descriptor instead.
func (*IngestUsageRecordRequest) Descriptor() ([]byte, []int) {
	return file_rpc_proto_rawDescGZIP(), []int{3}
}

func (x *IngestUsageRecordRequest) GetOwner() *Owner {
	if x != nil {
		return x.Owner
	}
	return nil
}

func (x *IngestUsageRecordRequest) GetEntity() *Entity {
	if x != nil {
		return x.Entity
	}
	return nil
}

func (x *IngestUsageRecordRequest) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *IngestUsageRecordRequest) GetCount() int64 {
	if x != nil {
		return x.Count
	}
	return 0
}

type IngestUsageRecordResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *IngestUsageRecordResponse) Reset() {
	*x = IngestUsageRecordResponse{}
	mi := &file_rpc_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *IngestUsageRecordResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IngestUsageRecordResponse) ProtoMessage() {}

func (x *IngestUsageRecordResponse) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IngestUsageRecordResponse.ProtoReflect.Descriptor instead.
func (*IngestUsageRecordResponse) Descriptor() ([]byte, []int) {
	return file_rpc_proto_rawDescGZIP(), []int{4}
}

type GetUsageTimelineRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Owners        []*Owner               `protobuf:"bytes,1,rep,name=owners,proto3" json:"owners,omitempty"`
	EntityIds     []string               `protobuf:"bytes,2,rep,name=entity_ids,json=entityIds,proto3" json:"entity_ids,omitempty"`
	EntityTypes   []string               `protobuf:"bytes,3,rep,name=entity_types,json=entityTypes,proto3" json:"entity_types,omitempty"`
	From          int64                  `protobuf:"varint,4,opt,name=from,proto3" json:"from,omitempty"`
	To            int64                  `protobuf:"varint,5,opt,name=to,proto3" json:"to,omitempty"`
	Interval      *Interval              `protobuf:"bytes,6,opt,name=interval,proto3" json:"interval,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetUsageTimelineRequest) Reset() {
	*x = GetUsageTimelineRequest{}
	mi := &file_rpc_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetUsageTimelineRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUsageTimelineRequest) ProtoMessage() {}

func (x *GetUsageTimelineRequest) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUsageTimelineRequest.ProtoReflect.Descriptor instead.
func (*GetUsageTimelineRequest) Descriptor() ([]byte, []int) {
	return file_rpc_proto_rawDescGZIP(), []int{5}
}

func (x *GetUsageTimelineRequest) GetOwners() []*Owner {
	if x != nil {
		return x.Owners
	}
	return nil
}

func (x *GetUsageTimelineRequest) GetEntityIds() []string {
	if x != nil {
		return x.EntityIds
	}
	return nil
}

func (x *GetUsageTimelineRequest) GetEntityTypes() []string {
	if x != nil {
		return x.EntityTypes
	}
	return nil
}

func (x *GetUsageTimelineRequest) GetFrom() int64 {
	if x != nil {
		return x.From
	}
	return 0
}

func (x *GetUsageTimelineRequest) GetTo() int64 {
	if x != nil {
		return x.To
	}
	return 0
}

func (x *GetUsageTimelineRequest) GetInterval() *Interval {
	if x != nil {
		return x.Interval
	}
	return nil
}

type TimelineEntry struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Ts            int64                  `protobuf:"varint,1,opt,name=ts,proto3" json:"ts,omitempty"`
	Count         int64                  `protobuf:"varint,2,opt,name=count,proto3" json:"count,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TimelineEntry) Reset() {
	*x = TimelineEntry{}
	mi := &file_rpc_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TimelineEntry) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TimelineEntry) ProtoMessage() {}

func (x *TimelineEntry) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TimelineEntry.ProtoReflect.Descriptor instead.
func (*TimelineEntry) Descriptor() ([]byte, []int) {
	return file_rpc_proto_rawDescGZIP(), []int{6}
}

func (x *TimelineEntry) GetTs() int64 {
	if x != nil {
		return x.Ts
	}
	return 0
}

func (x *TimelineEntry) GetCount() int64 {
	if x != nil {
		return x.Count
	}
	return 0
}

type TimelineSeries struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	EntityId      string                 `protobuf:"bytes,1,opt,name=entity_id,json=entityId,proto3" json:"entity_id,omitempty"`
	EntityType    string                 `protobuf:"bytes,2,opt,name=entity_type,json=entityType,proto3" json:"entity_type,omitempty"`
	OwnerId       string                 `protobuf:"bytes,3,opt,name=owner_id,json=ownerId,proto3" json:"owner_id,omitempty"`
	Entries       []*TimelineEntry       `protobuf:"bytes,4,rep,name=entries,proto3" json:"entries,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TimelineSeries) Reset() {
	*x = TimelineSeries{}
	mi := &file_rpc_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TimelineSeries) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TimelineSeries) ProtoMessage() {}

func (x *TimelineSeries) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TimelineSeries.ProtoReflect.Descriptor instead.
func (*TimelineSeries) Descriptor() ([]byte, []int) {
	return file_rpc_proto_rawDescGZIP(), []int{7}
}

func (x *TimelineSeries) GetEntityId() string {
	if x != nil {
		return x.EntityId
	}
	return ""
}

func (x *TimelineSeries) GetEntityType() string {
	if x != nil {
		return x.EntityType
	}
	return ""
}

func (x *TimelineSeries) GetOwnerId() string {
	if x != nil {
		return x.OwnerId
	}
	return ""
}

func (x *TimelineSeries) GetEntries() []*TimelineEntry {
	if x != nil {
		return x.Entries
	}
	return nil
}

type GetUsageTimelineResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Series        []*TimelineSeries      `protobuf:"bytes,1,rep,name=series,proto3" json:"series,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetUsageTimelineResponse) Reset() {
	*x = GetUsageTimelineResponse{}
	mi := &file_rpc_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetUsageTimelineResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUsageTimelineResponse) ProtoMessage() {}

func (x *GetUsageTimelineResponse) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUsageTimelineResponse.ProtoReflect.Descriptor instead.
func (*GetUsageTimelineResponse) Descriptor() ([]byte, []int) {
	return file_rpc_proto_rawDescGZIP(), []int{8}
}

func (x *GetUsageTimelineResponse) GetSeries() []*TimelineSeries {
	if x != nil {
		return x.Series
	}
	return nil
}

var File_rpc_proto protoreflect.FileDescriptor

const file_rpc_proto_rawDesc = "" +
	"\n" +
	"\trpc.proto\x12\arpc.rpc\"?\n" +
	"\x05Owner\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12&\n" +
	"\x04type\x18\x02 \x01(\x0e2\x12.rpc.rpc.OwnerTypeR\x04type\",\n" +
	"\x06Entity\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x12\n" +
	"\x04type\x18\x02 \x01(\tR\x04type\"K\n" +
	"\bInterval\x12)\n" +
	"\x04unit\x18\x01 \x01(\x0e2\x15.rpc.rpc.IntervalUnitR\x04unit\x12\x14\n" +
	"\x05count\x18\x02 \x01(\x05R\x05count\"\x93\x01\n" +
	"\x18IngestUsageRecordRequest\x12$\n" +
	"\x05owner\x18\x01 \x01(\v2\x0e.rpc.rpc.OwnerR\x05owner\x12'\n" +
	"\x06entity\x18\x02 \x01(\v2\x0f.rpc.rpc.EntityR\x06entity\x12\x12\n" +
	"\x04type\x18\x03 \x01(\tR\x04type\x12\x14\n" +
	"\x05count\x18\x04 \x01(\x03R\x05count\"\x1b\n" +
	"\x19IngestUsageRecordResponse\"\xd6\x01\n" +
	"\x17GetUsageTimelineRequest\x12&\n" +
	"\x06owners\x18\x01 \x03(\v2\x0e.rpc.rpc.OwnerR\x06owners\x12\x1d\n" +
	"\n" +
	"entity_ids\x18\x02 \x03(\tR\tentityIds\x12!\n" +
	"\fentity_types\x18\x03 \x03(\tR\ventityTypes\x12\x12\n" +
	"\x04from\x18\x04 \x01(\x03R\x04from\x12\x0e\n" +
	"\x02to\x18\x05 \x01(\x03R\x02to\x12-\n" +
	"\binterval\x18\x06 \x01(\v2\x11.rpc.rpc.IntervalR\binterval\"5\n" +
	"\rTimelineEntry\x12\x0e\n" +
	"\x02ts\x18\x01 \x01(\x03R\x02ts\x12\x14\n" +
	"\x05count\x18\x02 \x01(\x03R\x05count\"\x9b\x01\n" +
	"\x0eTimelineSeries\x12\x1b\n" +
	"\tentity_id\x18\x01 \x01(\tR\bentityId\x12\x1f\n" +
	"\ventity_type\x18\x02 \x01(\tR\n" +
	"entityType\x12\x19\n" +
	"\bowner_id\x18\x03 \x01(\tR\aownerId\x120\n" +
	"\aentries\x18\x04 \x03(\v2\x16.rpc.rpc.TimelineEntryR\aentries\"K\n" +
	"\x18GetUsageTimelineResponse\x12/\n" +
	"\x06series\x18\x01 \x03(\v2\x17.rpc.rpc.TimelineSeriesR\x06series*]\n" +
	"\tOwnerType\x12\x1a\n" +
	"\x16owner_type_unspecified\x10\x00\x12\x17\n" +
	"\x13owner_type_instance\x10\x01\x12\x1b\n" +
	"\x17owner_type_organization\x10\x02*v\n" +
	"\fIntervalUnit\x12\x1d\n" +
	"\x19interval_unit_unspecified\x10\x00\x12\x18\n" +
	"\x14interval_unit_minute\x10\x01\x12\x16\n" +
	"\x12interval_unit_hour\x10\x02\x12\x15\n" +
	"\x11interval_unit_day\x10\x032\xc3\x01\n" +
	"\fUsageService\x12Z\n" +
	"\x11IngestUsageRecord\x12!.rpc.rpc.IngestUsageRecordRequest\x1a\".rpc.rpc.IngestUsageRecordResponse\x12W\n" +
	"\x10GetUsageTimeline\x12 .rpc.rpc.GetUsageTimelineRequest\x1a!.rpc.rpc.GetUsageTimelineResponseB7Z5github.com/metorial/metorial/services/rpc/gen/rpc;rpcb\x06proto3"

var (
	file_rpc_proto_rawDescOnce sync.Once
	file_rpc_proto_rawDescData []byte
)

func file_rpc_proto_rawDescGZIP() []byte {
	file_rpc_proto_rawDescOnce.Do(func() {
		file_rpc_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_rpc_proto_rawDesc), len(file_rpc_proto_rawDesc)))
	})
	return file_rpc_proto_rawDescData
}

var file_rpc_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_rpc_proto_msgTypes = make([]protoimpl.MessageInfo, 9)
var file_rpc_proto_goTypes = []any{
	(OwnerType)(0),                    // 0: rpc.rpc.OwnerType
	(IntervalUnit)(0),                 // 1: rpc.rpc.IntervalUnit
	(*Owner)(nil),                     // 2: rpc.rpc.Owner
	(*Entity)(nil),                    // 3: rpc.rpc.Entity
	(*Interval)(nil),                  // 4: rpc.rpc.Interval
	(*IngestUsageRecordRequest)(nil),  // 5: rpc.rpc.IngestUsageRecordRequest
	(*IngestUsageRecordResponse)(nil), // 6: rpc.rpc.IngestUsageRecordResponse
	(*GetUsageTimelineRequest)(nil),   // 7: rpc.rpc.GetUsageTimelineRequest
	(*TimelineEntry)(nil),             // 8: rpc.rpc.TimelineEntry
	(*TimelineSeries)(nil),            // 9: rpc.rpc.TimelineSeries
	(*GetUsageTimelineResponse)(nil),  // 10: rpc.rpc.GetUsageTimelineResponse
}
var file_rpc_proto_depIdxs = []int32{
	0,  // 0: rpc.rpc.Owner.type:type_name -> rpc.rpc.OwnerType
	1,  // 1: rpc.rpc.Interval.unit:type_name -> rpc.rpc.IntervalUnit
	2,  // 2: rpc.rpc.IngestUsageRecordRequest.owner:type_name -> rpc.rpc.Owner
	3,  // 3: rpc.rpc.IngestUsageRecordRequest.entity:type_name -> rpc.rpc.Entity
	2,  // 4: rpc.rpc.GetUsageTimelineRequest.owners:type_name -> rpc.rpc.Owner
	4,  // 5: rpc.rpc.GetUsageTimelineRequest.interval:type_name -> rpc.rpc.Interval
	8,  // 6: rpc.rpc.TimelineSeries.entries:type_name -> rpc.rpc.TimelineEntry
	9,  // 7: rpc.rpc.GetUsageTimelineResponse.series:type_name -> rpc.rpc.TimelineSeries
	5,  // 8: rpc.rpc.UsageService.IngestUsageRecord:input_type -> rpc.rpc.IngestUsageRecordRequest
	7,  // 9: rpc.rpc.UsageService.GetUsageTimeline:input_type -> rpc.rpc.GetUsageTimelineRequest
	6,  // 10: rpc.rpc.UsageService.IngestUsageRecord:output_type -> rpc.rpc.IngestUsageRecordResponse
	10, // 11: rpc.rpc.UsageService.GetUsageTimeline:output_type -> rpc.rpc.GetUsageTimelineResponse
	10, // [10:12] is the sub-list for method output_type
	8,  // [8:10] is the sub-list for method input_type
	8,  // [8:8] is the sub-list for extension type_name
	8,  // [8:8] is the sub-list for extension extendee
	0,  // [0:8] is the sub-list for field type_name
}

func init() { file_rpc_proto_init() }
func file_rpc_proto_init() {
	if File_rpc_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_rpc_proto_rawDesc), len(file_rpc_proto_rawDesc)),
			NumEnums:      2,
			NumMessages:   9,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_rpc_proto_goTypes,
		DependencyIndexes: file_rpc_proto_depIdxs,
		EnumInfos:         file_rpc_proto_enumTypes,
		MessageInfos:      file_rpc_proto_msgTypes,
	}.Build()
	File_rpc_proto = out.File
	file_rpc_proto_goTypes = nil
	file_rpc_proto_depIdxs = nil
}
