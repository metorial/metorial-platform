syntax = "proto3";

package broker.mcp;

option go_package = "github.com/metorial/metorial/mcp-engine/gen/mcp-engine/mcp;mcp";

message McpError {
  enum McpErrorCode {
    failed_to_start = 0;
    failed_to_stop = 1;
    invalid_mcp_message = 2;
    unknown_error = 3;
    timeout = 4;
    launch_params_error = 5;
    execution_error = 6;
  }

  string error_message = 1;
  McpErrorCode error_code = 2;
  map<string, string> metadata = 3; // Optional, Additional metadata for the error
  string uuid = 4; // UUID for tracking the error
}

message McpOutput {
  enum McpOutputType {
    stdout = 0;
    stderr = 1;
  }
  
  McpOutputType output_type = 1;
  repeated string lines = 2;
  string uuid = 3; // UUID for tracking the output
}

message McpMessageRaw {
  string message = 1; 
  string uuid = 2; // UUID for tracking the message
}

enum McpMessageType {
  request = 0;
  response = 1;  
  notification = 2;
  error = 3;
  unknown = 4;
}

message McpMessage {
  McpMessageRaw mcp_message = 1;
  McpMessageType message_type = 2;
  string id_string = 3; // Optional
  string id_json = 4; // Optional
  string method = 5; // Optional
}

message McpParticipant {
  enum ParticipantType {
    server = 0;
    client = 1;
  }

  ParticipantType type = 1;
  string participant_json = 2;
}