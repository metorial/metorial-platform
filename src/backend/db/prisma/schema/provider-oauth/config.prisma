enum ProviderOAuthConfigDiscoveryStatus {
  discovering
  manual
  supports_auto_registration
}

enum ProviderOAuthConfigType {
  json
  managed_server_http
}

model ProviderOAuthConfig {
  oid BigInt @id @default(autoincrement())
  id  String @unique

  discoverStatus ProviderOAuthConfigDiscoveryStatus @default(manual)

  type ProviderOAuthConfigType @default(json)

  httpEndpoint       String? // used if type is managed_server_http
  hasRemoteOauthForm Boolean? // used if type is managed_server_http

  lambdaServerInstanceForHttpEndpointOid BigInt? // used if type is managed_server_http
  lambdaServerInstanceForHttpEndpoint    LambdaServerInstance? @relation(fields: [lambdaServerInstanceForHttpEndpointOid], references: [oid], name: "ProviderOAuthConfig_remoteServerInstanceForHttpEndpoint")

  /// [ProviderOAuthConfig]
  config     Json
  configHash String

  scopes String[]

  instanceOid BigInt
  instance    Instance @relation(fields: [instanceOid], references: [oid])

  createdAt DateTime @default(now())

  connections                     ProviderOAuthConnection[]
  remoteServerInstances           RemoteServerInstance[]
  lambdaServerInstances           LambdaServerInstance[]
  serverImplementations           ServerImplementation[]
  serverDeployments               ServerDeployment[]
  providerOAuthRegistrationErrors ProviderOAuthRegistrationError[]

  @@unique([instanceOid, type, configHash])
}
