enum InstanceType {
  development
  production
}

enum InstanceStatus {
  active
  deleted
}

model Instance {
  oid BigInt @id @default(autoincrement())
  id  String @unique

  type   InstanceType
  status InstanceStatus

  slug String @unique
  name String

  projectOid BigInt
  project    Project @relation(fields: [projectOid], references: [oid], onDelete: Cascade)

  organizationOid BigInt
  organization    Organization @relation(fields: [organizationOid], references: [oid], onDelete: Cascade)

  createdAt DateTime  @default(now())
  deletedAt DateTime?
  updatedAt DateTime  @default(now()) @updatedAt

  machineAccesses          MachineAccess[]
  files                    File[]
  secrets                  Secret[]
  serverDeployments        ServerDeployment[]
  uploads                  Upload[]
  serverRunErrorGroups     ServerRunErrorGroup[]
  serverRuns               ServerRun[]
  serverSessions           ServerSession[]
  serverImplementations    ServerImplementation[]
  instanceServers          InstanceServer[]
  serverDeploymentConfigs  ServerDeploymentConfig[]
  sessions                 Session[]
  serverRunErrors          ServerRunError[]
  providerOAuthConnections ProviderOAuthConnection[]
  sessionConnections       SessionConnection[]
  customServerVersions     CustomServerVersion[]
  defaultServerVariants    ServerVariant[]           @relation("ServerVariantDefaultForInstance")
  onlyServerVariants       ServerVariant[]           @relation("ServerVariantOnlyForInstance")
  customServers            CustomServer[]
  remoteServerInstances    RemoteServerInstance[]
  customServerEvents       CustomServerEvent[]
  providerOAuthConfigs     ProviderOAuthConfig[]
  serverOAuthSessions      ServerOAuthSession[]
  lambdaServerInstances    LambdaServerInstance[]
  codeBuckets              CodeBucket[]
}
