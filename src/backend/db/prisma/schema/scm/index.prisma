enum ScmProvider {
  github
}

enum ScmAccountType {
  user
  organization
}

model ScmAccount {
  oid BigInt @id @default(autoincrement())
  id  String @unique

  provider ScmProvider
  type     ScmAccountType

  name       String
  identifier String

  externalId String

  organizationOid BigInt
  organization    Organization @relation(fields: [organizationOid], references: [oid], onDelete: Cascade)

  createdAt DateTime @default(now())
  updatedAt DateTime @default(now()) @updatedAt

  scmRepos ScmRepo[]

  @@unique([organizationOid, provider, externalId])
}

model ScmRepo {
  oid BigInt @id @default(autoincrement())
  id  String @unique

  provider ScmProvider

  name       String
  identifier String

  externalId String

  accountOid BigInt
  account    ScmAccount @relation(fields: [accountOid], references: [oid], onDelete: Cascade)

  organizationOid BigInt
  organization    Organization @relation(fields: [organizationOid], references: [oid], onDelete: Cascade)

  installationOid BigInt
  installation    ScmInstallation @relation(fields: [installationOid], references: [oid], onDelete: Cascade)

  createdAt DateTime @default(now())
  updatedAt DateTime @default(now()) @updatedAt

  @@unique([organizationOid, provider, externalId])
}

model ScmInstallation {
  oid BigInt @id @default(autoincrement())
  id  String @unique

  provider ScmProvider

  ownerActorOid BigInt
  ownerActor    OrganizationActor @relation(fields: [ownerActorOid], references: [oid], onDelete: Cascade)

  organizationOid BigInt
  organization    Organization @relation(fields: [organizationOid], references: [oid], onDelete: Cascade)

  accessToken String

  externalUserId       String
  externalUserName     String
  externalUserEmail    String?
  externalUserImageUrl String?

  createdAt DateTime  @default(now())
  updatedAt DateTime  @default(now()) @updatedAt
  ScmRepo   ScmRepo[]

  @@unique([organizationOid, provider, externalUserId])
}

model ScmInstallationAttempt {
  oid BigInt @id @default(autoincrement())

  redirectUrl String
  state       String @unique

  organizationOid BigInt
  organization    Organization @relation(fields: [organizationOid], references: [oid], onDelete: Cascade)

  ownerActorOid BigInt
  ownerActor    OrganizationActor @relation(fields: [ownerActorOid], references: [oid], onDelete: Cascade)

  createdAt DateTime @default(now())
}
