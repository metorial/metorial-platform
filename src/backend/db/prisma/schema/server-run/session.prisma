enum SessionMcpConnectionType {
  sse
  streamable_http
  websocket
}

enum ServerSessionStatus {
  pending
  running
  stopped
}

model ServerSession {
  oid    BigInt              @id @default(autoincrement())
  id     String              @unique
  status ServerSessionStatus

  mcpVersion        String?
  mcpInitialized    Boolean?
  mcpConnectionType SessionMcpConnectionType?

  serverDeploymentOid BigInt
  serverDeployment    ServerDeployment @relation(fields: [serverDeploymentOid], references: [oid])

  instanceOid BigInt
  instance    Instance @relation(fields: [instanceOid], references: [oid])

  sessionOid BigInt
  session    Session @relation(fields: [sessionOid], references: [oid])

  /// [SessionClientInfo]
  clientInfo Json?

  /// [SessionClientCapabilities]
  clientCapabilities Json?

  /// [SessionServerInfo]
  serverInfo Json?

  /// [SessionServerCapabilities]
  serverCapabilities Json?

  totalProductiveClientMessageCount Int @default(0)
  totalProductiveServerMessageCount Int @default(0)

  messages   SessionMessage[]
  serverRuns ServerRun[]

  createdAt DateTime @default(now())

  lastClientActionAt DateTime?
  lastServerActionAt DateTime?
}

enum SessionStatus {
  active
  deleted
}

enum SessionConnectionType {
  mcp
  unified
}

enum SessionConnectionStatus {
  connected
  disconnected
}

model Session {
  oid BigInt @id @default(autoincrement())
  id  String @unique

  clientSecretId        String
  clientSecretValue     String    @unique
  clientSecretExpiresAt DateTime?

  status           SessionStatus
  connectionStatus SessionConnectionStatus
  connectionType   SessionConnectionType

  totalProductiveClientMessageCount Int @default(0)
  totalProductiveServerMessageCount Int @default(0)

  metadata Json?

  lastClientActionAt DateTime?
  lastClientPingAt   DateTime?

  instanceOid BigInt
  instance    Instance @relation(fields: [instanceOid], references: [oid])

  createdAt DateTime  @default(now())
  updatedAt DateTime  @default(now()) @updatedAt
  deletedAt DateTime?

  serverDeployments ServerDeployment[]
  serverSessions    ServerSession[]
  messages          SessionMessage[]
  events            SessionEvent[]

  @@index([connectionStatus])
  @@index([lastClientPingAt])
}
