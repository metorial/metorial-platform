enum SessionStatus {
  active
  deleted
}

enum SessionConnectionType {
  mcp
  unified
}

enum SessionConnectionStatus {
  connected
  disconnected
}

model Session {
  oid BigInt @id @default(autoincrement())
  id  String @unique

  clientSecretId        String    @unique
  clientSecretValue     String    @unique
  clientSecretExpiresAt DateTime?

  status           SessionStatus
  connectionStatus SessionConnectionStatus
  connectionType   SessionConnectionType

  totalProductiveClientMessageCount Int @default(0)
  totalProductiveServerMessageCount Int @default(0)

  metadata Json?

  lastClientActionAt DateTime?
  lastClientPingAt   DateTime?

  instanceOid BigInt
  instance    Instance @relation(fields: [instanceOid], references: [oid])

  createdAt DateTime  @default(now())
  updatedAt DateTime  @default(now()) @updatedAt
  deletedAt DateTime?

  serverDeploymentsOldDontUse ServerDeployment[]
  serverSessions              ServerSession[]
  messages                    SessionMessage[]
  events                      SessionEvent[]
  connections                 SessionConnection[]
  serverDeployments           SessionServerDeployment[]

  @@index([connectionStatus])
  @@index([lastClientPingAt])
}

model SessionServerDeployment {
  oid BigInt @id @default(autoincrement())
  id  String @unique

  sessionOid BigInt
  session    Session @relation(fields: [sessionOid], references: [oid])

  serverDeploymentOid BigInt
  serverDeployment    ServerDeployment @relation(fields: [serverDeploymentOid], references: [oid])

  oauthSessionOid BigInt?
  oauthSession    ServerOAuthSession? @relation(fields: [oauthSessionOid], references: [oid])

  createdAt DateTime @default(now())

  @@unique([sessionOid, serverDeploymentOid])
}
