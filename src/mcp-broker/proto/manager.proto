syntax = "proto3";

package broker.manager;

option go_package = "github.com/metorial/metorial/mcp-broker/gen/mcp-broker/manager;manager";

import "runner.proto";
import "mcp.proto";

service McpManager {
  rpc CreateSession(CreateSessionRequest) returns (CreateSessionResponse);
  rpc SendMcpMessage(SendMcpMessageRequest) returns (stream SendMcpMessageResponse);
  rpc StreamMcpMessages(StreamMcpMessagesRequest) returns (stream StreamMcpMessagesResponse);
  rpc GetServerInfo(GetServerInfoRequest) returns (broker.mcp.McpParticipant);
}

message CreateSessionRequest {
  enum SessionType {
    runner = 0;
  }

  string session_id = 1;
  SessionType type = 2;
  SessionConfig config = 3;
  broker.mcp.McpParticipant mcp_client = 4;
}

message Launcher {
  enum LauncherType {
    deno = 0;
  }

  LauncherType launcher_type = 1;
  string code = 2;
}

message RunConfigWithLauncher {
  broker.runner.RunConfigContainer container = 1;
  Launcher launcher = 2;
}

message SessionConfig {
  oneof config_type {
    RunConfigWithLauncher run_config_with_launcher = 1;
    broker.runner.RunConfig run_config_with_container_arguments = 2;
  }
}

message CreateSessionResponse {}

message SendMcpMessageRequest {
  string session_id = 1;
  repeated broker.mcp.McpMessageRaw mcp_messages = 2;
  bool include_responses = 3;
}

message SendMcpMessageResponse {
  enum ResponseType {
    error = 0;
    message = 1;
  }

  ResponseType response_type = 1;
  broker.mcp.McpMessage mcp_response_message = 2; 
  broker.mcp.McpError mcp_error = 3;
}

message StreamMcpMessagesRequest {
  string session_id = 1;
  repeated broker.mcp.McpMessageType only_message_types = 2; // Optional, if empty, all message types are streamed
  repeated string only_ids = 3; // Optional, if empty, all messages are streamed
}

message StreamMcpMessagesResponse {
  enum ResponseType {
    error = 0;
    message = 1;
  }

  ResponseType response_type = 1;
  broker.mcp.McpMessage mcp_response_message = 2; 
  broker.mcp.McpError mcp_error = 3;
}

message GetServerInfoRequest {
  string session_id = 1;
}