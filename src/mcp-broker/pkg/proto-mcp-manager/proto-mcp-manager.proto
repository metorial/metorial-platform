syntax = "proto3";

package proto;

option go_package = "proto-mcp-manager.proto";

service McpManagerForWorker {
  rpc ListManagers(ListManagersRequest) returns (ListManagersResponse);
  rpc RegisterWorker(RegisterWorkerRequest) returns (RegisterWorkerResponse);
}

message ListManagersRequest {}

message ListManagersResponse {
  repeated Manager managers = 1;
}

message Manager {
  string id = 1;
  string address = 2;
}

enum WorkerType {
  WORKER_TYPE_RUNNER = 0;
}

message RegisterWorkerRequest {
  string worker_id = 1;
  string address = 2;
  WorkerType worker_type = 3;
}

message RegisterWorkerResponse {}

service McpManager {
}

message McpError {
  enum McpErrorCode {
    FAILED_TO_START = 0;
    FAILED_TO_STOP = 1;
    INVALID_MCP_MESSAGE = 2;
    UNKNOWN_ERROR = 3;
  }

  string error_message = 1;
  McpErrorCode error_code = 2;
  string connection_id = 3;
  string session_id = 4;
}

message McpOutput {
  enum McpOutputType {
    STDOUT = 0;
    STDERR = 1;
  }
  
  McpOutputType output_type = 1;
  repeated string lines = 2;
  string connection_id = 3;
  string session_id = 4;
}

message McpMessageRaw {
  string message = 1; 
}

message McpMessage {
  enum McpMessageType {
    REQUEST = 0;
    RESPONSE = 1;  
    NOTIFICATION = 2;
    ERROR = 3;
    UNKNOWN = 4;
  }

  McpMessageRaw mcp_message = 1;
  McpMessageType message_type = 2;
  string connection_id = 3;
  string session_id = 4;
}

