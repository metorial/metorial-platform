// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v6.31.1
// source: proto-mcp-manager.proto

package proto_mcp_manager_proto

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type WorkerType int32

const (
	WorkerType_WORKER_TYPE_RUNNER WorkerType = 0
)

// Enum value maps for WorkerType.
var (
	WorkerType_name = map[int32]string{
		0: "WORKER_TYPE_RUNNER",
	}
	WorkerType_value = map[string]int32{
		"WORKER_TYPE_RUNNER": 0,
	}
)

func (x WorkerType) Enum() *WorkerType {
	p := new(WorkerType)
	*p = x
	return p
}

func (x WorkerType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (WorkerType) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_mcp_manager_proto_enumTypes[0].Descriptor()
}

func (WorkerType) Type() protoreflect.EnumType {
	return &file_proto_mcp_manager_proto_enumTypes[0]
}

func (x WorkerType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use WorkerType.Descriptor instead.
func (WorkerType) EnumDescriptor() ([]byte, []int) {
	return file_proto_mcp_manager_proto_rawDescGZIP(), []int{0}
}

type McpError_McpErrorCode int32

const (
	McpError_FAILED_TO_START     McpError_McpErrorCode = 0
	McpError_FAILED_TO_STOP      McpError_McpErrorCode = 1
	McpError_INVALID_MCP_MESSAGE McpError_McpErrorCode = 2
	McpError_UNKNOWN_ERROR       McpError_McpErrorCode = 3
)

// Enum value maps for McpError_McpErrorCode.
var (
	McpError_McpErrorCode_name = map[int32]string{
		0: "FAILED_TO_START",
		1: "FAILED_TO_STOP",
		2: "INVALID_MCP_MESSAGE",
		3: "UNKNOWN_ERROR",
	}
	McpError_McpErrorCode_value = map[string]int32{
		"FAILED_TO_START":     0,
		"FAILED_TO_STOP":      1,
		"INVALID_MCP_MESSAGE": 2,
		"UNKNOWN_ERROR":       3,
	}
)

func (x McpError_McpErrorCode) Enum() *McpError_McpErrorCode {
	p := new(McpError_McpErrorCode)
	*p = x
	return p
}

func (x McpError_McpErrorCode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (McpError_McpErrorCode) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_mcp_manager_proto_enumTypes[1].Descriptor()
}

func (McpError_McpErrorCode) Type() protoreflect.EnumType {
	return &file_proto_mcp_manager_proto_enumTypes[1]
}

func (x McpError_McpErrorCode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use McpError_McpErrorCode.Descriptor instead.
func (McpError_McpErrorCode) EnumDescriptor() ([]byte, []int) {
	return file_proto_mcp_manager_proto_rawDescGZIP(), []int{5, 0}
}

type McpOutput_McpOutputType int32

const (
	McpOutput_STDOUT McpOutput_McpOutputType = 0
	McpOutput_STDERR McpOutput_McpOutputType = 1
)

// Enum value maps for McpOutput_McpOutputType.
var (
	McpOutput_McpOutputType_name = map[int32]string{
		0: "STDOUT",
		1: "STDERR",
	}
	McpOutput_McpOutputType_value = map[string]int32{
		"STDOUT": 0,
		"STDERR": 1,
	}
)

func (x McpOutput_McpOutputType) Enum() *McpOutput_McpOutputType {
	p := new(McpOutput_McpOutputType)
	*p = x
	return p
}

func (x McpOutput_McpOutputType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (McpOutput_McpOutputType) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_mcp_manager_proto_enumTypes[2].Descriptor()
}

func (McpOutput_McpOutputType) Type() protoreflect.EnumType {
	return &file_proto_mcp_manager_proto_enumTypes[2]
}

func (x McpOutput_McpOutputType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use McpOutput_McpOutputType.Descriptor instead.
func (McpOutput_McpOutputType) EnumDescriptor() ([]byte, []int) {
	return file_proto_mcp_manager_proto_rawDescGZIP(), []int{6, 0}
}

type McpMessage_McpMessageType int32

const (
	McpMessage_REQUEST      McpMessage_McpMessageType = 0
	McpMessage_RESPONSE     McpMessage_McpMessageType = 1
	McpMessage_NOTIFICATION McpMessage_McpMessageType = 2
	McpMessage_ERROR        McpMessage_McpMessageType = 3
	McpMessage_UNKNOWN      McpMessage_McpMessageType = 4
)

// Enum value maps for McpMessage_McpMessageType.
var (
	McpMessage_McpMessageType_name = map[int32]string{
		0: "REQUEST",
		1: "RESPONSE",
		2: "NOTIFICATION",
		3: "ERROR",
		4: "UNKNOWN",
	}
	McpMessage_McpMessageType_value = map[string]int32{
		"REQUEST":      0,
		"RESPONSE":     1,
		"NOTIFICATION": 2,
		"ERROR":        3,
		"UNKNOWN":      4,
	}
)

func (x McpMessage_McpMessageType) Enum() *McpMessage_McpMessageType {
	p := new(McpMessage_McpMessageType)
	*p = x
	return p
}

func (x McpMessage_McpMessageType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (McpMessage_McpMessageType) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_mcp_manager_proto_enumTypes[3].Descriptor()
}

func (McpMessage_McpMessageType) Type() protoreflect.EnumType {
	return &file_proto_mcp_manager_proto_enumTypes[3]
}

func (x McpMessage_McpMessageType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use McpMessage_McpMessageType.Descriptor instead.
func (McpMessage_McpMessageType) EnumDescriptor() ([]byte, []int) {
	return file_proto_mcp_manager_proto_rawDescGZIP(), []int{8, 0}
}

type ListManagersRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListManagersRequest) Reset() {
	*x = ListManagersRequest{}
	mi := &file_proto_mcp_manager_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListManagersRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListManagersRequest) ProtoMessage() {}

func (x *ListManagersRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_mcp_manager_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListManagersRequest.ProtoReflect.Descriptor instead.
func (*ListManagersRequest) Descriptor() ([]byte, []int) {
	return file_proto_mcp_manager_proto_rawDescGZIP(), []int{0}
}

type ListManagersResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Managers      []*Manager             `protobuf:"bytes,1,rep,name=managers,proto3" json:"managers,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListManagersResponse) Reset() {
	*x = ListManagersResponse{}
	mi := &file_proto_mcp_manager_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListManagersResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListManagersResponse) ProtoMessage() {}

func (x *ListManagersResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_mcp_manager_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListManagersResponse.ProtoReflect.Descriptor instead.
func (*ListManagersResponse) Descriptor() ([]byte, []int) {
	return file_proto_mcp_manager_proto_rawDescGZIP(), []int{1}
}

func (x *ListManagersResponse) GetManagers() []*Manager {
	if x != nil {
		return x.Managers
	}
	return nil
}

type Manager struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Address       string                 `protobuf:"bytes,2,opt,name=address,proto3" json:"address,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Manager) Reset() {
	*x = Manager{}
	mi := &file_proto_mcp_manager_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Manager) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Manager) ProtoMessage() {}

func (x *Manager) ProtoReflect() protoreflect.Message {
	mi := &file_proto_mcp_manager_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Manager.ProtoReflect.Descriptor instead.
func (*Manager) Descriptor() ([]byte, []int) {
	return file_proto_mcp_manager_proto_rawDescGZIP(), []int{2}
}

func (x *Manager) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Manager) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

type RegisterWorkerRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	WorkerId      string                 `protobuf:"bytes,1,opt,name=worker_id,json=workerId,proto3" json:"worker_id,omitempty"`
	Address       string                 `protobuf:"bytes,2,opt,name=address,proto3" json:"address,omitempty"`
	WorkerType    WorkerType             `protobuf:"varint,3,opt,name=worker_type,json=workerType,proto3,enum=proto.WorkerType" json:"worker_type,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RegisterWorkerRequest) Reset() {
	*x = RegisterWorkerRequest{}
	mi := &file_proto_mcp_manager_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RegisterWorkerRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RegisterWorkerRequest) ProtoMessage() {}

func (x *RegisterWorkerRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_mcp_manager_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RegisterWorkerRequest.ProtoReflect.Descriptor instead.
func (*RegisterWorkerRequest) Descriptor() ([]byte, []int) {
	return file_proto_mcp_manager_proto_rawDescGZIP(), []int{3}
}

func (x *RegisterWorkerRequest) GetWorkerId() string {
	if x != nil {
		return x.WorkerId
	}
	return ""
}

func (x *RegisterWorkerRequest) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

func (x *RegisterWorkerRequest) GetWorkerType() WorkerType {
	if x != nil {
		return x.WorkerType
	}
	return WorkerType_WORKER_TYPE_RUNNER
}

type RegisterWorkerResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RegisterWorkerResponse) Reset() {
	*x = RegisterWorkerResponse{}
	mi := &file_proto_mcp_manager_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RegisterWorkerResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RegisterWorkerResponse) ProtoMessage() {}

func (x *RegisterWorkerResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_mcp_manager_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RegisterWorkerResponse.ProtoReflect.Descriptor instead.
func (*RegisterWorkerResponse) Descriptor() ([]byte, []int) {
	return file_proto_mcp_manager_proto_rawDescGZIP(), []int{4}
}

type McpError struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ErrorMessage  string                 `protobuf:"bytes,1,opt,name=error_message,json=errorMessage,proto3" json:"error_message,omitempty"`
	ErrorCode     McpError_McpErrorCode  `protobuf:"varint,2,opt,name=error_code,json=errorCode,proto3,enum=proto.McpError_McpErrorCode" json:"error_code,omitempty"`
	ConnectionId  string                 `protobuf:"bytes,3,opt,name=connection_id,json=connectionId,proto3" json:"connection_id,omitempty"`
	SessionId     string                 `protobuf:"bytes,4,opt,name=session_id,json=sessionId,proto3" json:"session_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *McpError) Reset() {
	*x = McpError{}
	mi := &file_proto_mcp_manager_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *McpError) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*McpError) ProtoMessage() {}

func (x *McpError) ProtoReflect() protoreflect.Message {
	mi := &file_proto_mcp_manager_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use McpError.ProtoReflect.Descriptor instead.
func (*McpError) Descriptor() ([]byte, []int) {
	return file_proto_mcp_manager_proto_rawDescGZIP(), []int{5}
}

func (x *McpError) GetErrorMessage() string {
	if x != nil {
		return x.ErrorMessage
	}
	return ""
}

func (x *McpError) GetErrorCode() McpError_McpErrorCode {
	if x != nil {
		return x.ErrorCode
	}
	return McpError_FAILED_TO_START
}

func (x *McpError) GetConnectionId() string {
	if x != nil {
		return x.ConnectionId
	}
	return ""
}

func (x *McpError) GetSessionId() string {
	if x != nil {
		return x.SessionId
	}
	return ""
}

type McpOutput struct {
	state         protoimpl.MessageState  `protogen:"open.v1"`
	OutputType    McpOutput_McpOutputType `protobuf:"varint,1,opt,name=output_type,json=outputType,proto3,enum=proto.McpOutput_McpOutputType" json:"output_type,omitempty"`
	Lines         []string                `protobuf:"bytes,2,rep,name=lines,proto3" json:"lines,omitempty"`
	ConnectionId  string                  `protobuf:"bytes,3,opt,name=connection_id,json=connectionId,proto3" json:"connection_id,omitempty"`
	SessionId     string                  `protobuf:"bytes,4,opt,name=session_id,json=sessionId,proto3" json:"session_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *McpOutput) Reset() {
	*x = McpOutput{}
	mi := &file_proto_mcp_manager_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *McpOutput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*McpOutput) ProtoMessage() {}

func (x *McpOutput) ProtoReflect() protoreflect.Message {
	mi := &file_proto_mcp_manager_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use McpOutput.ProtoReflect.Descriptor instead.
func (*McpOutput) Descriptor() ([]byte, []int) {
	return file_proto_mcp_manager_proto_rawDescGZIP(), []int{6}
}

func (x *McpOutput) GetOutputType() McpOutput_McpOutputType {
	if x != nil {
		return x.OutputType
	}
	return McpOutput_STDOUT
}

func (x *McpOutput) GetLines() []string {
	if x != nil {
		return x.Lines
	}
	return nil
}

func (x *McpOutput) GetConnectionId() string {
	if x != nil {
		return x.ConnectionId
	}
	return ""
}

func (x *McpOutput) GetSessionId() string {
	if x != nil {
		return x.SessionId
	}
	return ""
}

type McpMessageRaw struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Message       string                 `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *McpMessageRaw) Reset() {
	*x = McpMessageRaw{}
	mi := &file_proto_mcp_manager_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *McpMessageRaw) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*McpMessageRaw) ProtoMessage() {}

func (x *McpMessageRaw) ProtoReflect() protoreflect.Message {
	mi := &file_proto_mcp_manager_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use McpMessageRaw.ProtoReflect.Descriptor instead.
func (*McpMessageRaw) Descriptor() ([]byte, []int) {
	return file_proto_mcp_manager_proto_rawDescGZIP(), []int{7}
}

func (x *McpMessageRaw) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type McpMessage struct {
	state         protoimpl.MessageState    `protogen:"open.v1"`
	McpMessage    *McpMessageRaw            `protobuf:"bytes,1,opt,name=mcp_message,json=mcpMessage,proto3" json:"mcp_message,omitempty"`
	MessageType   McpMessage_McpMessageType `protobuf:"varint,2,opt,name=message_type,json=messageType,proto3,enum=proto.McpMessage_McpMessageType" json:"message_type,omitempty"`
	ConnectionId  string                    `protobuf:"bytes,3,opt,name=connection_id,json=connectionId,proto3" json:"connection_id,omitempty"`
	SessionId     string                    `protobuf:"bytes,4,opt,name=session_id,json=sessionId,proto3" json:"session_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *McpMessage) Reset() {
	*x = McpMessage{}
	mi := &file_proto_mcp_manager_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *McpMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*McpMessage) ProtoMessage() {}

func (x *McpMessage) ProtoReflect() protoreflect.Message {
	mi := &file_proto_mcp_manager_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use McpMessage.ProtoReflect.Descriptor instead.
func (*McpMessage) Descriptor() ([]byte, []int) {
	return file_proto_mcp_manager_proto_rawDescGZIP(), []int{8}
}

func (x *McpMessage) GetMcpMessage() *McpMessageRaw {
	if x != nil {
		return x.McpMessage
	}
	return nil
}

func (x *McpMessage) GetMessageType() McpMessage_McpMessageType {
	if x != nil {
		return x.MessageType
	}
	return McpMessage_REQUEST
}

func (x *McpMessage) GetConnectionId() string {
	if x != nil {
		return x.ConnectionId
	}
	return ""
}

func (x *McpMessage) GetSessionId() string {
	if x != nil {
		return x.SessionId
	}
	return ""
}

var File_proto_mcp_manager_proto protoreflect.FileDescriptor

const file_proto_mcp_manager_proto_rawDesc = "" +
	"\n" +
	"\x17proto-mcp-manager.proto\x12\x05proto\"\x15\n" +
	"\x13ListManagersRequest\"B\n" +
	"\x14ListManagersResponse\x12*\n" +
	"\bmanagers\x18\x01 \x03(\v2\x0e.proto.ManagerR\bmanagers\"3\n" +
	"\aManager\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x18\n" +
	"\aaddress\x18\x02 \x01(\tR\aaddress\"\x82\x01\n" +
	"\x15RegisterWorkerRequest\x12\x1b\n" +
	"\tworker_id\x18\x01 \x01(\tR\bworkerId\x12\x18\n" +
	"\aaddress\x18\x02 \x01(\tR\aaddress\x122\n" +
	"\vworker_type\x18\x03 \x01(\x0e2\x11.proto.WorkerTypeR\n" +
	"workerType\"\x18\n" +
	"\x16RegisterWorkerResponse\"\x95\x02\n" +
	"\bMcpError\x12#\n" +
	"\rerror_message\x18\x01 \x01(\tR\ferrorMessage\x12;\n" +
	"\n" +
	"error_code\x18\x02 \x01(\x0e2\x1c.proto.McpError.McpErrorCodeR\terrorCode\x12#\n" +
	"\rconnection_id\x18\x03 \x01(\tR\fconnectionId\x12\x1d\n" +
	"\n" +
	"session_id\x18\x04 \x01(\tR\tsessionId\"c\n" +
	"\fMcpErrorCode\x12\x13\n" +
	"\x0fFAILED_TO_START\x10\x00\x12\x12\n" +
	"\x0eFAILED_TO_STOP\x10\x01\x12\x17\n" +
	"\x13INVALID_MCP_MESSAGE\x10\x02\x12\x11\n" +
	"\rUNKNOWN_ERROR\x10\x03\"\xcf\x01\n" +
	"\tMcpOutput\x12?\n" +
	"\voutput_type\x18\x01 \x01(\x0e2\x1e.proto.McpOutput.McpOutputTypeR\n" +
	"outputType\x12\x14\n" +
	"\x05lines\x18\x02 \x03(\tR\x05lines\x12#\n" +
	"\rconnection_id\x18\x03 \x01(\tR\fconnectionId\x12\x1d\n" +
	"\n" +
	"session_id\x18\x04 \x01(\tR\tsessionId\"'\n" +
	"\rMcpOutputType\x12\n" +
	"\n" +
	"\x06STDOUT\x10\x00\x12\n" +
	"\n" +
	"\x06STDERR\x10\x01\")\n" +
	"\rMcpMessageRaw\x12\x18\n" +
	"\amessage\x18\x01 \x01(\tR\amessage\"\xa3\x02\n" +
	"\n" +
	"McpMessage\x125\n" +
	"\vmcp_message\x18\x01 \x01(\v2\x14.proto.McpMessageRawR\n" +
	"mcpMessage\x12C\n" +
	"\fmessage_type\x18\x02 \x01(\x0e2 .proto.McpMessage.McpMessageTypeR\vmessageType\x12#\n" +
	"\rconnection_id\x18\x03 \x01(\tR\fconnectionId\x12\x1d\n" +
	"\n" +
	"session_id\x18\x04 \x01(\tR\tsessionId\"U\n" +
	"\x0eMcpMessageType\x12\v\n" +
	"\aREQUEST\x10\x00\x12\f\n" +
	"\bRESPONSE\x10\x01\x12\x10\n" +
	"\fNOTIFICATION\x10\x02\x12\t\n" +
	"\x05ERROR\x10\x03\x12\v\n" +
	"\aUNKNOWN\x10\x04*$\n" +
	"\n" +
	"WorkerType\x12\x16\n" +
	"\x12WORKER_TYPE_RUNNER\x10\x002\xad\x01\n" +
	"\x13McpManagerForWorker\x12G\n" +
	"\fListManagers\x12\x1a.proto.ListManagersRequest\x1a\x1b.proto.ListManagersResponse\x12M\n" +
	"\x0eRegisterWorker\x12\x1c.proto.RegisterWorkerRequest\x1a\x1d.proto.RegisterWorkerResponse2\f\n" +
	"\n" +
	"McpManagerB\x19Z\x17proto-mcp-manager.protob\x06proto3"

var (
	file_proto_mcp_manager_proto_rawDescOnce sync.Once
	file_proto_mcp_manager_proto_rawDescData []byte
)

func file_proto_mcp_manager_proto_rawDescGZIP() []byte {
	file_proto_mcp_manager_proto_rawDescOnce.Do(func() {
		file_proto_mcp_manager_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_proto_mcp_manager_proto_rawDesc), len(file_proto_mcp_manager_proto_rawDesc)))
	})
	return file_proto_mcp_manager_proto_rawDescData
}

var file_proto_mcp_manager_proto_enumTypes = make([]protoimpl.EnumInfo, 4)
var file_proto_mcp_manager_proto_msgTypes = make([]protoimpl.MessageInfo, 9)
var file_proto_mcp_manager_proto_goTypes = []any{
	(WorkerType)(0),                // 0: proto.WorkerType
	(McpError_McpErrorCode)(0),     // 1: proto.McpError.McpErrorCode
	(McpOutput_McpOutputType)(0),   // 2: proto.McpOutput.McpOutputType
	(McpMessage_McpMessageType)(0), // 3: proto.McpMessage.McpMessageType
	(*ListManagersRequest)(nil),    // 4: proto.ListManagersRequest
	(*ListManagersResponse)(nil),   // 5: proto.ListManagersResponse
	(*Manager)(nil),                // 6: proto.Manager
	(*RegisterWorkerRequest)(nil),  // 7: proto.RegisterWorkerRequest
	(*RegisterWorkerResponse)(nil), // 8: proto.RegisterWorkerResponse
	(*McpError)(nil),               // 9: proto.McpError
	(*McpOutput)(nil),              // 10: proto.McpOutput
	(*McpMessageRaw)(nil),          // 11: proto.McpMessageRaw
	(*McpMessage)(nil),             // 12: proto.McpMessage
}
var file_proto_mcp_manager_proto_depIdxs = []int32{
	6,  // 0: proto.ListManagersResponse.managers:type_name -> proto.Manager
	0,  // 1: proto.RegisterWorkerRequest.worker_type:type_name -> proto.WorkerType
	1,  // 2: proto.McpError.error_code:type_name -> proto.McpError.McpErrorCode
	2,  // 3: proto.McpOutput.output_type:type_name -> proto.McpOutput.McpOutputType
	11, // 4: proto.McpMessage.mcp_message:type_name -> proto.McpMessageRaw
	3,  // 5: proto.McpMessage.message_type:type_name -> proto.McpMessage.McpMessageType
	4,  // 6: proto.McpManagerForWorker.ListManagers:input_type -> proto.ListManagersRequest
	7,  // 7: proto.McpManagerForWorker.RegisterWorker:input_type -> proto.RegisterWorkerRequest
	5,  // 8: proto.McpManagerForWorker.ListManagers:output_type -> proto.ListManagersResponse
	8,  // 9: proto.McpManagerForWorker.RegisterWorker:output_type -> proto.RegisterWorkerResponse
	8,  // [8:10] is the sub-list for method output_type
	6,  // [6:8] is the sub-list for method input_type
	6,  // [6:6] is the sub-list for extension type_name
	6,  // [6:6] is the sub-list for extension extendee
	0,  // [0:6] is the sub-list for field type_name
}

func init() { file_proto_mcp_manager_proto_init() }
func file_proto_mcp_manager_proto_init() {
	if File_proto_mcp_manager_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_proto_mcp_manager_proto_rawDesc), len(file_proto_mcp_manager_proto_rawDesc)),
			NumEnums:      4,
			NumMessages:   9,
			NumExtensions: 0,
			NumServices:   2,
		},
		GoTypes:           file_proto_mcp_manager_proto_goTypes,
		DependencyIndexes: file_proto_mcp_manager_proto_depIdxs,
		EnumInfos:         file_proto_mcp_manager_proto_enumTypes,
		MessageInfos:      file_proto_mcp_manager_proto_msgTypes,
	}.Build()
	File_proto_mcp_manager_proto = out.File
	file_proto_mcp_manager_proto_goTypes = nil
	file_proto_mcp_manager_proto_depIdxs = nil
}
