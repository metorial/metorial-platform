// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v6.31.1
// source: broker.proto

package broker

import (
	common "github.com/metorial/metorial/mcp-broker/gen/mcp-broker/common"
	manager "github.com/metorial/metorial/mcp-broker/gen/mcp-broker/manager"
	runner "github.com/metorial/metorial/mcp-broker/gen/mcp-broker/runner"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

var File_broker_proto protoreflect.FileDescriptor

const file_broker_proto_rawDesc = "" +
	"\n" +
	"\fbroker.proto\x12\x05proto\x1a\rmanager.proto\x1a\frunner.proto\x1a\fcommon.proto2\xfe\x03\n" +
	"\tMcpRunner\x12T\n" +
	"\rGetRunnerInfo\x12 .broker.runner.RunnerInfoRequest\x1a!.broker.runner.RunnerInfoResponse\x12_\n" +
	"\x12StreamRunnerHealth\x12\".broker.runner.RunnerHealthRequest\x1a#.broker.runner.RunnerHealthResponse0\x01\x12I\n" +
	"\x0eListActiveRuns\x12\x14.broker.common.Empty\x1a!.broker.runner.ActiveRunsResponse\x12M\n" +
	"\x10ListDockerImages\x12\x14.broker.common.Empty\x1a#.broker.runner.DockerImagesResponse\x12U\n" +
	"\x14ListDockerContainers\x12\x14.broker.common.Empty\x1a'.broker.runner.DockerContainersResponse\x12I\n" +
	"\fStreamMcpRun\x12\x19.broker.runner.RunRequest\x1a\x1a.broker.runner.RunResponse(\x010\x012\xb9\x02\n" +
	"\n" +
	"McpManager\x12\\\n" +
	"\rCreateSession\x12$.broker.manager.CreateSessionRequest\x1a%.broker.manager.CreateSessionResponse\x12a\n" +
	"\x0eSendMcpMessage\x12%.broker.manager.SendMcpMessageRequest\x1a&.broker.manager.SendMcpMessageResponse0\x01\x12j\n" +
	"\x11StreamMcpMessages\x12(.broker.manager.StreamMcpMessagesRequest\x1a).broker.manager.StreamMcpMessagesResponse0\x01BFZDgithub.com/metorial/metorial/mcp-broker/gen/mcp-broker/broker;brokerb\x06proto3"

var file_broker_proto_goTypes = []any{
	(*runner.RunnerInfoRequest)(nil),          // 0: broker.runner.RunnerInfoRequest
	(*runner.RunnerHealthRequest)(nil),        // 1: broker.runner.RunnerHealthRequest
	(*common.Empty)(nil),                      // 2: broker.common.Empty
	(*runner.RunRequest)(nil),                 // 3: broker.runner.RunRequest
	(*manager.CreateSessionRequest)(nil),      // 4: broker.manager.CreateSessionRequest
	(*manager.SendMcpMessageRequest)(nil),     // 5: broker.manager.SendMcpMessageRequest
	(*manager.StreamMcpMessagesRequest)(nil),  // 6: broker.manager.StreamMcpMessagesRequest
	(*runner.RunnerInfoResponse)(nil),         // 7: broker.runner.RunnerInfoResponse
	(*runner.RunnerHealthResponse)(nil),       // 8: broker.runner.RunnerHealthResponse
	(*runner.ActiveRunsResponse)(nil),         // 9: broker.runner.ActiveRunsResponse
	(*runner.DockerImagesResponse)(nil),       // 10: broker.runner.DockerImagesResponse
	(*runner.DockerContainersResponse)(nil),   // 11: broker.runner.DockerContainersResponse
	(*runner.RunResponse)(nil),                // 12: broker.runner.RunResponse
	(*manager.CreateSessionResponse)(nil),     // 13: broker.manager.CreateSessionResponse
	(*manager.SendMcpMessageResponse)(nil),    // 14: broker.manager.SendMcpMessageResponse
	(*manager.StreamMcpMessagesResponse)(nil), // 15: broker.manager.StreamMcpMessagesResponse
}
var file_broker_proto_depIdxs = []int32{
	0,  // 0: proto.McpRunner.GetRunnerInfo:input_type -> broker.runner.RunnerInfoRequest
	1,  // 1: proto.McpRunner.StreamRunnerHealth:input_type -> broker.runner.RunnerHealthRequest
	2,  // 2: proto.McpRunner.ListActiveRuns:input_type -> broker.common.Empty
	2,  // 3: proto.McpRunner.ListDockerImages:input_type -> broker.common.Empty
	2,  // 4: proto.McpRunner.ListDockerContainers:input_type -> broker.common.Empty
	3,  // 5: proto.McpRunner.StreamMcpRun:input_type -> broker.runner.RunRequest
	4,  // 6: proto.McpManager.CreateSession:input_type -> broker.manager.CreateSessionRequest
	5,  // 7: proto.McpManager.SendMcpMessage:input_type -> broker.manager.SendMcpMessageRequest
	6,  // 8: proto.McpManager.StreamMcpMessages:input_type -> broker.manager.StreamMcpMessagesRequest
	7,  // 9: proto.McpRunner.GetRunnerInfo:output_type -> broker.runner.RunnerInfoResponse
	8,  // 10: proto.McpRunner.StreamRunnerHealth:output_type -> broker.runner.RunnerHealthResponse
	9,  // 11: proto.McpRunner.ListActiveRuns:output_type -> broker.runner.ActiveRunsResponse
	10, // 12: proto.McpRunner.ListDockerImages:output_type -> broker.runner.DockerImagesResponse
	11, // 13: proto.McpRunner.ListDockerContainers:output_type -> broker.runner.DockerContainersResponse
	12, // 14: proto.McpRunner.StreamMcpRun:output_type -> broker.runner.RunResponse
	13, // 15: proto.McpManager.CreateSession:output_type -> broker.manager.CreateSessionResponse
	14, // 16: proto.McpManager.SendMcpMessage:output_type -> broker.manager.SendMcpMessageResponse
	15, // 17: proto.McpManager.StreamMcpMessages:output_type -> broker.manager.StreamMcpMessagesResponse
	9,  // [9:18] is the sub-list for method output_type
	0,  // [0:9] is the sub-list for method input_type
	0,  // [0:0] is the sub-list for extension type_name
	0,  // [0:0] is the sub-list for extension extendee
	0,  // [0:0] is the sub-list for field type_name
}

func init() { file_broker_proto_init() }
func file_broker_proto_init() {
	if File_broker_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_broker_proto_rawDesc), len(file_broker_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   0,
			NumExtensions: 0,
			NumServices:   2,
		},
		GoTypes:           file_broker_proto_goTypes,
		DependencyIndexes: file_broker_proto_depIdxs,
	}.Build()
	File_broker_proto = out.File
	file_broker_proto_goTypes = nil
	file_broker_proto_depIdxs = nil
}
