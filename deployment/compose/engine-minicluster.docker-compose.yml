services:
  etcd:
    image: bitnami/etcd:latest
    environment:
      ALLOW_NONE_AUTHENTICATION: yes
    restart: unless-stopped
    networks:
      - minicluster
    expose:
      - '2379'
      - '2380'

  pg:
    image: postgres:16-alpine
    volumes:
      - pg_data:/var/lib/postgresql/data
    environment:
      POSTGRES_PASSWORD: postgres
      POSTGRES_USER: postgres
    restart: unless-stopped
    networks:
      - minicluster
    expose:
      - '5432'

  manager-1:
    image: ghcr.io/metorial/metorial-mcp-engine-manager:latest
    depends_on:
      - etcd
      - pg
    restart: unless-stopped
    networks:
      - minicluster
      - manager-public
    ports:
      - '51050:51050'
    environment:
      ETCD_ENDPOINTS: etcd:2379
      ENGINE_DATABASE_DSN: "host=pg user=postgres password=postgres dbname=metorial-engine port=5432 sslmode=disable"
      SENTRY_DSN: ${SENTRY_DSN:-}
      MANAGER_ADDRESS: ${MINICLUSTER_HOST:-}:51050
    healthcheck:
      test: ["CMD", "grpc-health-probe", "-addr=:51050"]
      interval: 10s
      timeout: 3s
      retries: 3

  # manager-2:
  #   image: ghcr.io/metorial/metorial-mcp-engine-manager:latest
  #   depends_on:
  #     - etcd
  #     - pg
  #   restart: unless-stopped
  #   networks:
  #     - minicluster
  #     - manager-public
  #   ports:
  #     - '51051:51051'
  #   environment:
  #     ETCD_ENDPOINTS: etcd:2379
  #     ENGINE_DATABASE_DSN: "host=pg user=postgres password=postgres dbname=metorial-engine port=5432 sslmode=disable"
  #     SENTRY_DSN: ${SENTRY_DSN:-}
  #     MANAGER_ADDRESS: ${MINICLUSTER_HOST:-}:51051
  #   healthcheck:
  #     test: ["CMD", "grpc-health-probe", "-addr=:51051"]
  #     interval: 10s
  #     timeout: 3s
  #     retries: 3

  launcher-1:
    image: ghcr.io/metorial/metorial-mcp-engine-launcher:latest
    depends_on:
      - etcd
      - pg
      - manager-1
      # - manager-2
    restart: unless-stopped
    networks:
      - minicluster
    ports:
      - '51060:51060'
    environment:
      SENTRY_DSN: ${SENTRY_DSN:-}
      WORKER_ADDRESS: launcher-1:51060
      MANAGER_ADDRESS: ${MINICLUSTER_HOST:-}:51050
      MANAGER_ADDRESS_MAPPING: "{\"${MINICLUSTER_HOST:-}:51050\": \"manager-1:51050\", \"${MINICLUSTER_HOST:-}:51051\": \"manager-2:51051\"}"
    healthcheck:
      test: ["CMD", "grpc-health-probe", "-addr=:51060"]
      interval: 10s
      timeout: 3s
      retries: 3
    
  # launcher-2:
  #   image: ghcr.io/metorial/metorial-mcp-engine-launcher:latest
  #   depends_on:
  #     - etcd
  #     - pg
  #     - manager-1
  #     - manager-2
  #   restart: unless-stopped
  #   networks:
  #     - minicluster
  #   ports:
  #     - '51061:51061'
  #   environment:
  #     SENTRY_DSN: ${SENTRY_DSN:-}
  #     WORKER_ADDRESS: launcher-2:51061
  #     MANAGER_ADDRESS: ${MINICLUSTER_HOST:-}:51051
  #     MANAGER_ADDRESS_MAPPING: "{\"${MINICLUSTER_HOST:-}:51050\": \"manager-1:51050\", \"${MINICLUSTER_HOST:-}:51051\": \"manager-2:51051\"}"
  #   healthcheck:
  #     test: ["CMD", "grpc-health-probe", "-addr=:51061"]
  #     interval: 10s
  #     timeout: 3s
  #     retries: 3

  remote-1:
    image: ghcr.io/metorial/metorial-mcp-engine-remote:latest
    depends_on:
      - etcd
      - pg
      - manager-1
      # - manager-2
    restart: unless-stopped
    networks:
      - minicluster
    ports:
      - '51070:51070'
    environment:
      SENTRY_DSN: ${SENTRY_DSN:-}
      WORKER_ADDRESS: remote-1:51070
      MANAGER_ADDRESS: ${MINICLUSTER_HOST:-}:51050
      MANAGER_ADDRESS_MAPPING: "{\"${MINICLUSTER_HOST:-}:51050\": \"manager-1:51050\", \"${MINICLUSTER_HOST:-}:51051\": \"manager-2:51051\"}"
    healthcheck:
      test: ["CMD", "grpc-health-probe", "-addr=:51070"]
      interval: 10s
      timeout: 3s
      retries: 3
    
  # remote-2:
  #   image: ghcr.io/metorial/metorial-mcp-engine-remote:latest
  #   depends_on:
  #     - etcd
  #     - pg
  #     - manager-1
  #     - manager-2
  #   restart: unless-stopped
  #   networks:
  #     - minicluster
  #   ports:
  #     - '51071:51071'
  #   environment:
  #     SENTRY_DSN: ${SENTRY_DSN:-}
  #     WORKER_ADDRESS: remote-2:51071
  #     MANAGER_ADDRESS: ${MINICLUSTER_HOST:-}:51051
  #     MANAGER_ADDRESS_MAPPING: "{\"${MINICLUSTER_HOST:-}:51050\": \"manager-1:51050\", \"${MINICLUSTER_HOST:-}:51051\": \"manager-2:51051\"}"
  #   healthcheck:
  #     test: ["CMD", "grpc-health-probe", "-addr=:51071"]
  #     interval: 10s
  #     timeout: 3s
  #     retries: 3

networks:
  manager-public:
    driver: bridge
  minicluster:
    internal: true

volumes:
  pg_data: